CCS PCH C Compiler, Version 4.140, 22098               12-set-14 09:34

               Filename:   D:\Projetos\Toroide\toroide.lst

               ROM used:   588 bytes (2%)
                           Largest free fragment is 32180
               RAM used:   1509 (98%) at main() level
                           1519 (99%) worst case
               Stack:     2 locations

*
0000:  GOTO   0134
.................... /* 
....................  * toroide.c 
....................  * 
....................  *  Created on: 09/09/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include<18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #DEVICE ADC=10 
....................  
.................... #FUSES HS 
....................  
.................... #USE delay(clock=16MHz) 
*
0004:  MOVLW  05
0006:  MOVWF  FEA
0008:  MOVLW  E3
000A:  MOVWF  FE9
000C:  MOVF   FEF,W
000E:  BZ    002C
0010:  MOVLW  05
0012:  MOVWF  01
0014:  CLRF   00
0016:  DECFSZ 00,F
0018:  BRA    0016
001A:  DECFSZ 01,F
001C:  BRA    0014
001E:  MOVLW  2E
0020:  MOVWF  00
0022:  DECFSZ 00,F
0024:  BRA    0022
0026:  BRA    0028
0028:  DECFSZ FEF,F
002A:  BRA    0010
002C:  GOTO   0176 (RETURN)
.................... #USE rs232(xmit=PIN_C6, BAUD=9600) 
0030:  BCF    F94.6
0032:  BCF    F8B.6
0034:  MOVLW  08
0036:  MOVWF  01
0038:  BRA    003A
003A:  NOP   
003C:  BSF    01.7
003E:  BRA    0060
0040:  BCF    01.7
0042:  MOVLB  5
0044:  RRCF   xEE,F
0046:  MOVLB  0
0048:  BTFSC  FD8.0
004A:  BSF    F8B.6
004C:  BTFSS  FD8.0
004E:  BCF    F8B.6
0050:  BSF    01.6
0052:  BRA    0060
0054:  BCF    01.6
0056:  DECFSZ 01,F
0058:  BRA    0042
005A:  BRA    005C
005C:  NOP   
005E:  BSF    F8B.6
0060:  MOVLW  84
0062:  MOVWF  FE9
0064:  DECFSZ FE9,F
0066:  BRA    0064
0068:  BRA    006A
006A:  NOP   
006C:  BTFSC  01.7
006E:  BRA    0040
0070:  BTFSC  01.6
0072:  BRA    0054
0074:  RETURN 0
....................  
.................... #define botStart	PIN_B0 
.................... #define bufferSize	750 
....................  
.................... short ctrl; 
....................  
.................... long vetor[bufferSize]; 
.................... long cont; 
.................... int main(void) { 
*
0134:  CLRF   FF8
0136:  BCF    FD0.7
0138:  CLRF   FEA
013A:  CLRF   FE9
013C:  BCF    F94.6
013E:  BSF    F8B.6
0140:  BSF    FC1.0
0142:  BSF    FC1.1
0144:  BSF    FC1.2
0146:  BCF    FC1.3
....................  
.................... 	SETUP_ADC(ADC_CLOCK_INTERNAL); 
0148:  BCF    FC1.6
014A:  BSF    FC2.6
014C:  BSF    FC2.7
014E:  BSF    FC1.7
0150:  BSF    FC2.0
.................... 	SETUP_ADC_PORTS(AN0); 
0152:  BCF    FC1.0
0154:  BSF    FC1.1
0156:  BSF    FC1.2
0158:  BSF    FC1.3
.................... 	set_adc_channel(0); 
015A:  MOVLW  00
015C:  MOVWF  01
015E:  MOVF   FC2,W
0160:  ANDLW  C7
0162:  IORWF  01,W
0164:  MOVWF  FC2
....................  
.................... 	while (TRUE) { 
....................  
.................... 		if (!input(botStart)) { 
0166:  BSF    F93.0
0168:  BTFSC  F81.0
016A:  BRA    0240
.................... 			delay_ms(100); 
016C:  MOVLW  64
016E:  MOVLB  5
0170:  MOVWF  xE3
0172:  MOVLB  0
0174:  BRA    0004
.................... 			if (!input(botStart) && !ctrl) { 
0176:  BSF    F93.0
0178:  BTFSC  F81.0
017A:  BRA    023A
017C:  BTFSC  04.0
017E:  BRA    023A
.................... 				ctrl = TRUE; 
0180:  BSF    04.0
.................... 				cont = 0; 
0182:  MOVLB  5
0184:  CLRF   xE2
0186:  CLRF   xE1
.................... 				while (cont < bufferSize) { 
0188:  MOVF   xE2,W
018A:  SUBLW  02
018C:  BNC   01D2
018E:  BNZ   0196
0190:  MOVF   xE1,W
0192:  SUBLW  ED
0194:  BNC   01D2
.................... 					vetor[cont++] = read_adc(); 
0196:  MOVFF  5E2,03
019A:  MOVF   xE1,W
019C:  INCF   xE1,F
019E:  BTFSC  FD8.2
01A0:  INCF   xE2,F
01A2:  MOVWF  xE3
01A4:  MOVFF  03,5E4
01A8:  BCF    FD8.0
01AA:  RLCF   xE3,W
01AC:  MOVWF  02
01AE:  RLCF   03,W
01B0:  MOVWF  03
01B2:  MOVF   02,W
01B4:  ADDLW  05
01B6:  MOVWF  FE9
01B8:  MOVLW  00
01BA:  ADDWFC 03,W
01BC:  MOVWF  FEA
01BE:  BSF    FC2.2
01C0:  BTFSC  FC2.2
01C2:  BRA    01C0
01C4:  MOVFF  FC3,FEF
01C8:  MOVFF  FC4,FEC
.................... 					while (!adc_done()) 
.................... 						; 
01CC:  BTFSC  FC2.2
01CE:  BRA    01CC
.................... 				} 
01D0:  BRA    0188
.................... 				for (cont = 0; cont < bufferSize; ++cont) { 
01D2:  CLRF   xE2
01D4:  CLRF   xE1
01D6:  MOVF   xE2,W
01D8:  SUBLW  02
01DA:  BNC   0232
01DC:  BNZ   01E4
01DE:  MOVF   xE1,W
01E0:  SUBLW  ED
01E2:  BNC   0232
.................... 					printf("%lu\n\r", vetor[cont]); 
01E4:  BCF    FD8.0
01E6:  RLCF   xE1,W
01E8:  MOVWF  02
01EA:  RLCF   xE2,W
01EC:  MOVWF  03
01EE:  MOVF   02,W
01F0:  ADDLW  05
01F2:  MOVWF  FE9
01F4:  MOVLW  00
01F6:  ADDWFC 03,W
01F8:  MOVWF  FEA
01FA:  MOVFF  FEC,5E4
01FE:  MOVF   FED,F
0200:  MOVFF  FEF,5E3
0204:  MOVLW  10
0206:  MOVWF  FE9
0208:  MOVFF  5E4,5E6
020C:  MOVFF  5E3,5E5
0210:  MOVLB  0
0212:  BRA    0076
0214:  MOVLW  0A
0216:  MOVLB  5
0218:  MOVWF  xEE
021A:  MOVLB  0
021C:  RCALL  0030
021E:  MOVLW  0D
0220:  MOVLB  5
0222:  MOVWF  xEE
0224:  MOVLB  0
0226:  RCALL  0030
.................... 				} 
0228:  MOVLB  5
022A:  INCF   xE1,F
022C:  BTFSC  FD8.2
022E:  INCF   xE2,F
0230:  BRA    01D6
.................... 				cont = 0; 
0232:  CLRF   xE2
0234:  CLRF   xE1
.................... 			} else if (ctrl) 
0236:  BRA    0242
0238:  MOVLB  0
023A:  BTFSS  04.0
023C:  BRA    0240
.................... 				ctrl = FALSE; 
023E:  BCF    04.0
0240:  MOVLB  5
.................... 		} 
.................... 	} 
0242:  MOVLB  0
0244:  BRA    0166
.................... 	return 0; 
0246:  MOVLW  00
0248:  MOVWF  01
.................... } 
024A:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
