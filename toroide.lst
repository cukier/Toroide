CCS PCH C Compiler, Version 4.140, 22098               10-set-14 09:03

               Filename:   D:\Projetos\Toroide\toroide.lst

               ROM used:   1796 bytes (5%)
                           Largest free fragment is 30972
               RAM used:   21 (1%) at main() level
                           47 (3%) worst case
               Stack:     2 locations

*
0000:  GOTO   056A
.................... /* 
....................  * toroide.c 
....................  * 
....................  *  Created on: 09/09/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include<18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #DEVICE ADC=10 
....................  
.................... #FUSES HS 
....................  
.................... #USE delay(clock=16MHz) 
*
0018:  CLRF   FEA
001A:  MOVLW  11
001C:  MOVWF  FE9
001E:  MOVF   FEF,W
0020:  BZ    003E
0022:  MOVLW  05
0024:  MOVWF  01
0026:  CLRF   00
0028:  DECFSZ 00,F
002A:  BRA    0028
002C:  DECFSZ 01,F
002E:  BRA    0026
0030:  MOVLW  2E
0032:  MOVWF  00
0034:  DECFSZ 00,F
0036:  BRA    0034
0038:  BRA    003A
003A:  DECFSZ FEF,F
003C:  BRA    0022
003E:  RETURN 0
.................... #USE rs232(xmit=PIN_C6, BAUD=9600) 
*
01D0:  BCF    F94.6
01D2:  BCF    F8B.6
01D4:  MOVLW  08
01D6:  MOVWF  01
01D8:  BRA    01DA
01DA:  NOP   
01DC:  BSF    01.7
01DE:  BRA    01FC
01E0:  BCF    01.7
01E2:  RRCF   22,F
01E4:  BTFSC  FD8.0
01E6:  BSF    F8B.6
01E8:  BTFSS  FD8.0
01EA:  BCF    F8B.6
01EC:  BSF    01.6
01EE:  BRA    01FC
01F0:  BCF    01.6
01F2:  DECFSZ 01,F
01F4:  BRA    01E2
01F6:  BRA    01F8
01F8:  NOP   
01FA:  BSF    F8B.6
01FC:  MOVLW  84
01FE:  MOVWF  FE9
0200:  DECFSZ FE9,F
0202:  BRA    0200
0204:  BRA    0206
0206:  NOP   
0208:  BTFSC  01.7
020A:  BRA    01E0
020C:  BTFSC  01.6
020E:  BRA    01F0
0210:  RETURN 0
....................  
.................... long reed; 
.................... long reedAux; 
....................  
.................... long freq; 
.................... long freqAux; 
....................  
.................... int latencia = 2; 
....................  
.................... float aux; 
....................  
.................... int main(void) { 
*
056A:  CLRF   FF8
056C:  BCF    FD0.7
056E:  CLRF   FEA
0570:  CLRF   FE9
0572:  BCF    F94.6
0574:  BSF    F8B.6
0576:  MOVLW  02
0578:  MOVWF  0C
057A:  BSF    FC1.0
057C:  BSF    FC1.1
057E:  BSF    FC1.2
0580:  BCF    FC1.3
....................  
.................... 	SETUP_ADC(ADC_CLOCK_INTERNAL); 
0582:  BCF    FC1.6
0584:  BSF    FC2.6
0586:  BSF    FC2.7
0588:  BSF    FC1.7
058A:  BSF    FC2.0
.................... 	SETUP_ADC_PORTS(AN0_AN1_AN3); 
058C:  BCF    FC1.0
058E:  BCF    FC1.1
0590:  BSF    FC1.2
0592:  BCF    FC1.3
....................  
.................... 	while (TRUE) { 
....................  
.................... 		set_adc_channel(0); 
0594:  MOVLW  00
0596:  MOVWF  01
0598:  MOVF   FC2,W
059A:  ANDLW  C7
059C:  IORWF  01,W
059E:  MOVWF  FC2
.................... 		delay_ms(latencia); 
05A0:  MOVFF  0C,11
05A4:  RCALL  0018
.................... 		freq = read_adc(); 
05A6:  BSF    FC2.2
05A8:  BTFSC  FC2.2
05AA:  BRA    05A8
05AC:  MOVFF  FC3,08
05B0:  MOVFF  FC4,09
....................  
.................... 		if (freq != freqAux) { 
05B4:  MOVF   0A,W
05B6:  SUBWF  08,W
05B8:  BNZ   05C0
05BA:  MOVF   0B,W
05BC:  SUBWF  09,W
05BE:  BZ    0648
.................... 			freqAux = freq; 
05C0:  MOVFF  09,0B
05C4:  MOVFF  08,0A
.................... 			printf("AN0: %f\n\r", (float) freq / 10.24); 
05C8:  MOVFF  09,12
05CC:  MOVFF  08,11
05D0:  RCALL  0040
05D2:  MOVFF  00,11
05D6:  MOVFF  01,12
05DA:  MOVFF  02,13
05DE:  MOVFF  03,14
05E2:  MOVFF  03,18
05E6:  MOVFF  02,17
05EA:  MOVFF  01,16
05EE:  MOVFF  00,15
05F2:  MOVLW  0A
05F4:  MOVWF  1C
05F6:  MOVLW  D7
05F8:  MOVWF  1B
05FA:  MOVLW  23
05FC:  MOVWF  1A
05FE:  MOVLW  82
0600:  MOVWF  19
0602:  RCALL  0076
0604:  MOVFF  00,11
0608:  MOVFF  01,12
060C:  MOVFF  02,13
0610:  MOVFF  03,14
0614:  MOVLW  04
0616:  MOVWF  FF6
0618:  MOVLW  00
061A:  MOVWF  FF7
061C:  MOVLW  05
061E:  MOVWF  15
0620:  RCALL  0212
0622:  MOVLW  89
0624:  MOVWF  FE9
0626:  MOVFF  14,18
062A:  MOVFF  13,17
062E:  MOVFF  12,16
0632:  MOVFF  11,15
0636:  MOVLW  02
0638:  MOVWF  19
063A:  RCALL  03F2
063C:  MOVLW  0A
063E:  MOVWF  22
0640:  RCALL  01D0
0642:  MOVLW  0D
0644:  MOVWF  22
0646:  RCALL  01D0
.................... 		} 
....................  
.................... 		set_adc_channel(3); 
0648:  MOVLW  18
064A:  MOVWF  01
064C:  MOVF   FC2,W
064E:  ANDLW  C7
0650:  IORWF  01,W
0652:  MOVWF  FC2
.................... 		delay_ms(latencia); 
0654:  MOVFF  0C,11
0658:  RCALL  0018
.................... 		reed = read_adc(); 
065A:  BSF    FC2.2
065C:  BTFSC  FC2.2
065E:  BRA    065C
0660:  MOVFF  FC3,04
0664:  MOVFF  FC4,05
....................  
.................... 		if (reed != reedAux) { 
0668:  MOVF   06,W
066A:  SUBWF  04,W
066C:  BNZ   0674
066E:  MOVF   07,W
0670:  SUBWF  05,W
0672:  BZ    06FC
.................... 			reedAux = reed; 
0674:  MOVFF  05,07
0678:  MOVFF  04,06
.................... 			printf("AN3: %f\n\r", (float) reed / 10.24); 
067C:  MOVFF  05,12
0680:  MOVFF  04,11
0684:  RCALL  0040
0686:  MOVFF  00,11
068A:  MOVFF  01,12
068E:  MOVFF  02,13
0692:  MOVFF  03,14
0696:  MOVFF  03,18
069A:  MOVFF  02,17
069E:  MOVFF  01,16
06A2:  MOVFF  00,15
06A6:  MOVLW  0A
06A8:  MOVWF  1C
06AA:  MOVLW  D7
06AC:  MOVWF  1B
06AE:  MOVLW  23
06B0:  MOVWF  1A
06B2:  MOVLW  82
06B4:  MOVWF  19
06B6:  RCALL  0076
06B8:  MOVFF  00,11
06BC:  MOVFF  01,12
06C0:  MOVFF  02,13
06C4:  MOVFF  03,14
06C8:  MOVLW  0E
06CA:  MOVWF  FF6
06CC:  MOVLW  00
06CE:  MOVWF  FF7
06D0:  MOVLW  05
06D2:  MOVWF  15
06D4:  RCALL  0212
06D6:  MOVLW  89
06D8:  MOVWF  FE9
06DA:  MOVFF  14,18
06DE:  MOVFF  13,17
06E2:  MOVFF  12,16
06E6:  MOVFF  11,15
06EA:  MOVLW  02
06EC:  MOVWF  19
06EE:  RCALL  03F2
06F0:  MOVLW  0A
06F2:  MOVWF  22
06F4:  RCALL  01D0
06F6:  MOVLW  0D
06F8:  MOVWF  22
06FA:  RCALL  01D0
.................... 		} 
.................... 	} 
06FC:  BRA    0594
.................... 	return 0; 
06FE:  MOVLW  00
0700:  MOVWF  01
.................... } 
0702:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
