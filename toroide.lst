CCS PCH C Compiler, Version 4.140, 22098               10-set-14 09:47

               Filename:   D:\Projetos\Toroide\toroide.lst

               ROM used:   2020 bytes (6%)
                           Largest free fragment is 30748
               RAM used:   21 (1%) at main() level
                           37 (2%) worst case
               Stack:     2 locations

*
0000:  GOTO   0670
.................... /* 
....................  * toroide.c 
....................  * 
....................  *  Created on: 09/09/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include<18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #DEVICE ADC=10 
....................  
.................... #FUSES HS 
....................  
.................... #USE delay(clock=16MHz) 
*
0004:  CLRF   FEA
0006:  MOVLW  11
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    002A
000E:  MOVLW  05
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  2E
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  BRA    0026
0026:  DECFSZ FEF,F
0028:  BRA    000E
002A:  RETURN 0
.................... #USE rs232(xmit=PIN_C6, BAUD=9600) 
*
057A:  BCF    F94.6
057C:  BCF    F8B.6
057E:  MOVLW  08
0580:  MOVWF  01
0582:  BRA    0584
0584:  NOP   
0586:  BSF    01.7
0588:  BRA    05A6
058A:  BCF    01.7
058C:  RRCF   1C,F
058E:  BTFSC  FD8.0
0590:  BSF    F8B.6
0592:  BTFSS  FD8.0
0594:  BCF    F8B.6
0596:  BSF    01.6
0598:  BRA    05A6
059A:  BCF    01.6
059C:  DECFSZ 01,F
059E:  BRA    058C
05A0:  BRA    05A2
05A2:  NOP   
05A4:  BSF    F8B.6
05A6:  MOVLW  84
05A8:  MOVWF  FE9
05AA:  DECFSZ FE9,F
05AC:  BRA    05AA
05AE:  BRA    05B0
05B0:  NOP   
05B2:  BTFSC  01.7
05B4:  BRA    058A
05B6:  BTFSC  01.6
05B8:  BRA    059A
05BA:  RETURN 0
....................  
.................... #define padrao 100 
....................  
.................... long reed; 
.................... long reedAux; 
....................  
.................... float freq; 
....................  
.................... int latencia = padrao; 
....................  
.................... float aux; 
....................  
.................... int main(void) { 
*
0670:  CLRF   FF8
0672:  BCF    FD0.7
0674:  CLRF   FEA
0676:  CLRF   FE9
0678:  BCF    F94.6
067A:  BSF    F8B.6
067C:  MOVLW  64
067E:  MOVWF  0C
0680:  BSF    FC1.0
0682:  BSF    FC1.1
0684:  BSF    FC1.2
0686:  BCF    FC1.3
....................  
.................... 	SETUP_ADC(ADC_CLOCK_INTERNAL); 
0688:  BCF    FC1.6
068A:  BSF    FC2.6
068C:  BSF    FC2.7
068E:  BSF    FC1.7
0690:  BSF    FC2.0
.................... 	SETUP_ADC_PORTS(AN0_AN1_AN3); 
0692:  BCF    FC1.0
0694:  BCF    FC1.1
0696:  BSF    FC1.2
0698:  BCF    FC1.3
....................  
.................... 	if (!latencia) 
069A:  MOVF   0C,F
069C:  BNZ   06A2
.................... 		latencia = padrao; 
069E:  MOVLW  64
06A0:  MOVWF  0C
....................  
.................... 	while (TRUE) { 
....................  
.................... 		set_adc_channel(0); 
06A2:  MOVLW  00
06A4:  MOVWF  01
06A6:  MOVF   FC2,W
06A8:  ANDLW  C7
06AA:  IORWF  01,W
06AC:  MOVWF  FC2
.................... 		delay_ms(latencia); 
06AE:  MOVFF  0C,11
06B2:  RCALL  0004
.................... 		reed = read_adc(); 
06B4:  BSF    FC2.2
06B6:  BTFSC  FC2.2
06B8:  BRA    06B6
06BA:  MOVFF  FC3,04
06BE:  MOVFF  FC4,05
....................  
.................... 		if (reedAux != reed) { 
06C2:  MOVF   04,W
06C4:  SUBWF  06,W
06C6:  BNZ   06CE
06C8:  MOVF   05,W
06CA:  SUBWF  07,W
06CC:  BZ    079E
.................... 			reedAux = reed; 
06CE:  MOVFF  05,07
06D2:  MOVFF  04,06
.................... 			freq = (float) (59 * reed / 1024) + 1; 
06D6:  CLRF   12
06D8:  MOVLW  3B
06DA:  MOVWF  11
06DC:  MOVFF  05,14
06E0:  MOVFF  04,13
06E4:  BRA    002C
06E6:  MOVFF  02,12
06EA:  CLRF   03
06EC:  RRCF   02,W
06EE:  MOVWF  02
06F0:  RRCF   02,F
06F2:  MOVLW  3F
06F4:  ANDWF  02,F
06F6:  MOVFF  02,11
06FA:  MOVFF  03,12
06FE:  BRA    004C
0700:  MOVFF  00,11
0704:  MOVFF  01,12
0708:  MOVFF  02,13
070C:  MOVFF  03,14
0710:  BCF    FD8.1
0712:  MOVFF  03,18
0716:  MOVFF  02,17
071A:  MOVFF  01,16
071E:  MOVFF  00,15
0722:  CLRF   1C
0724:  CLRF   1B
0726:  CLRF   1A
0728:  MOVLW  7F
072A:  MOVWF  19
072C:  BRA    0084
072E:  MOVFF  03,0B
0732:  MOVFF  02,0A
0736:  MOVFF  01,09
073A:  MOVFF  00,08
.................... 			latencia = (int) 1 / freq * 500; 
073E:  CLRF   14
0740:  CLRF   13
0742:  CLRF   12
0744:  MOVLW  7F
0746:  MOVWF  11
0748:  MOVFF  0B,18
074C:  MOVFF  0A,17
0750:  MOVFF  09,16
0754:  MOVFF  08,15
0758:  BRA    02F0
075A:  MOVFF  00,11
075E:  MOVFF  01,12
0762:  MOVFF  02,13
0766:  MOVFF  03,14
076A:  MOVFF  03,18
076E:  MOVFF  02,17
0772:  MOVFF  01,16
0776:  MOVFF  00,15
077A:  CLRF   1C
077C:  CLRF   1B
077E:  MOVLW  7A
0780:  MOVWF  1A
0782:  MOVLW  87
0784:  MOVWF  19
0786:  BRA    044C
0788:  MOVFF  03,14
078C:  MOVFF  02,13
0790:  MOVFF  01,12
0794:  MOVFF  00,11
0798:  BRA    0540
079A:  MOVFF  01,0C
.................... 		} 
....................  
.................... 		set_adc_channel(3); 
079E:  MOVLW  18
07A0:  MOVWF  01
07A2:  MOVF   FC2,W
07A4:  ANDLW  C7
07A6:  IORWF  01,W
07A8:  MOVWF  FC2
.................... 		delay_ms(latencia); 
07AA:  MOVFF  0C,11
07AE:  RCALL  0004
.................... 		printf("%lu\n\r", read_adc()); 
07B0:  BSF    FC2.2
07B2:  BTFSC  FC2.2
07B4:  BRA    07B2
07B6:  MOVFF  FC4,03
07BA:  MOVFF  FC3,11
07BE:  MOVFF  FC4,12
07C2:  MOVLW  10
07C4:  MOVWF  FE9
07C6:  MOVFF  FC4,14
07CA:  MOVFF  FC3,13
07CE:  BRA    05BC
07D0:  MOVLW  0A
07D2:  MOVWF  1C
07D4:  RCALL  057A
07D6:  MOVLW  0D
07D8:  MOVWF  1C
07DA:  RCALL  057A
.................... 	} 
07DC:  BRA    06A2
.................... 	return 0; 
07DE:  MOVLW  00
07E0:  MOVWF  01
.................... } 
07E2:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
